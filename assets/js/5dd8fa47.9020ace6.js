"use strict";(self.webpackChunkreact_native_paper_dates_docusaurus=self.webpackChunkreact_native_paper_dates_docusaurus||[]).push([[815],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},p=Object.keys(e);for(a=0;a<p.length;a++)n=p[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(a=0;a<p.length;a++)n=p[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),d=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=d(e.components);return a.createElement(l.Provider,{value:t},e.children)},s="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,p=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),s=d(n),m=r,k=s["".concat(l,".").concat(m)]||s[m]||c[m]||p;return n?a.createElement(k,i(i({ref:t},u),{},{components:n})):a.createElement(k,i({ref:t},u))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var p=n.length,i=new Array(p);i[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[s]="string"==typeof e?e:r,i[1]=o;for(var d=2;d<p;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7759:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>s,frontMatter:()=>p,metadata:()=>o,toc:()=>d});var a=n(7462),r=(n(7294),n(3905));const p={sidebar_position:3},i="Input Date Picker",o={unversionedId:"date-picker/input-date-picker",id:"date-picker/input-date-picker",title:"Input Date Picker",description:"The input date picker provides a text field allowing for a date to be input or the date picker to be opened and selected.",source:"@site/docs/date-picker/input-date-picker.md",sourceDirName:"date-picker",slug:"/date-picker/input-date-picker",permalink:"/react-native-paper-dates/docs/date-picker/input-date-picker",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Range Date Picker",permalink:"/react-native-paper-dates/docs/date-picker/range-date-picker"},next:{title:"Multiple Dates Picker",permalink:"/react-native-paper-dates/docs/date-picker/multiple-dates-picker"}},l={},d=[{value:"Usage",id:"usage",level:2},{value:"Live Example",id:"live-example",level:2},{value:"Props",id:"props",level:2}],u={toc:d};function s(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"input-date-picker"},"Input Date Picker"),(0,r.kt)("p",null,"The input date picker provides a text field allowing for a date to be input or the date picker to be opened and selected."),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'import React from "react";\nimport { View, Text } from "react-native";\nimport { DatePickerInput } from \'react-native-paper-dates\';\nimport { SafeAreaProvider } from "react-native-safe-area-context";\n\nexport default function App() {\n  const [inputDate, setInputDate] = React.useState(undefined)\n\n  return (\n    <SafeAreaProvider>\n      <View style={{justifyContent: \'center\', flex: 1, alignItems: \'center\'}}>\n        <DatePickerInput\n          locale="en"\n          label="Birthdate"\n          value={inputDate}\n          onChange={(d) => setInputDate(d)}\n          inputMode="start"\n        />\n      </View>\n    </SafeAreaProvider>\n  );\n}\n')),(0,r.kt)("h2",{id:"live-example"},"Live Example"),(0,r.kt)("p",null,"View an interactive ",(0,r.kt)("a",{parentName:"p",href:"https://snack.expo.dev/@fitzwabs/react-native-paper-dates-input"},"Expo snack"),"."),(0,r.kt)("h2",{id:"props"},"Props"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"locale (Required)"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"Type: String"),(0,r.kt)("br",{parentName:"p"}),"\n","A locale can be composed of both a base language, the country (territory) of use, and possibly codeset (which is usually assumed). For example, German is de."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"label (Required)"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"Type: String"),(0,r.kt)("br",{parentName:"p"}),"\n","The label used to display in the component."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"value (Required)"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"Type: Date | undefined"),(0,r.kt)("br",{parentName:"p"}),"\n","The value used to populate the component."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"onChange"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"Type: Function"),(0,r.kt)("br",{parentName:"p"}),"\n","Callback event when the component date mask length matches the text input length."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"onChangeText"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"Type: Function"),(0,r.kt)("br",{parentName:"p"}),"\n","Callback event when the component text input changes."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"inputMode (Required)"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"Type: String"),(0,r.kt)("br",{parentName:"p"}),"\n","The type of input needed for the the picker component."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"mode"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"Type: 'flat' | 'outlined'"),(0,r.kt)("br",{parentName:"p"}),"\n","See ",(0,r.kt)("a",{parentName:"p",href:"https://callstack.github.io/react-native-paper/text-input.html#mode"},"react-native-paper text-input"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"withDateFormatInLabel"),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"Type: boolean | undefined"),(0,r.kt)("br",{parentName:"p"}),"\n","Flag indicating if the date format should be inside the components label."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"hasError"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"Type: boolean | undefined"),(0,r.kt)("br",{parentName:"p"}),"\n","Flag indicating if the the component should display error styles."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"hideValidationErrors"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"Type: boolean | undefined"),(0,r.kt)("br",{parentName:"p"}),"\n","Flag indicating if the the component should hide error styles along with the ",(0,r.kt)("inlineCode",{parentName:"p"},"helperText")," component displaying the error message."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"onValidationError"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"Type: Function | undefined"),(0,r.kt)("br",{parentName:"p"}),"\n","Callback used to return any error messages from the components validation."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"saveLabelDisabled"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"Type: boolean | undefined"),(0,r.kt)("br",{parentName:"p"}),"\n","Flag indicating if the save label should be disabled and unable to receive events. Defaults to ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"uppercase"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"Type: boolean | undefined"),(0,r.kt)("br",{parentName:"p"}),"\n","Flag indicating if the text in the component should be uppercase. Defaults to ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"startYear"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"Type: number | undefined"),(0,r.kt)("br",{parentName:"p"}),"\n","The start year when the component is rendered. Defaults to ",(0,r.kt)("inlineCode",{parentName:"p"},"1800"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"endYear"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"Type: number | undefined"),(0,r.kt)("br",{parentName:"p"}),"\n","The end year when the component is rendered. Defaults to ",(0,r.kt)("inlineCode",{parentName:"p"},"2200"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"inputEnabled"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"Type: boolean | undefined"),(0,r.kt)("br",{parentName:"p"}),"\n","Flag indicating if the component should be enabled or not. Behavior similarly to ",(0,r.kt)("inlineCode",{parentName:"p"},"disabled"),". Defaults to ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Other ",(0,r.kt)("a",{parentName:"li",href:"https://reactnative.dev/docs/textinput#props"},"react-native TextInput props"),".*")))}s.isMDXComponent=!0}}]);